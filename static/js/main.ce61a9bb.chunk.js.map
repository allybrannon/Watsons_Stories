{"version":3,"sources":["images/DogSkeleton.jpg","images/Gold.png","components/MainPage.jsx","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","font","fontFamily","date","margin","textAlign","fontSize","fontWeight","title","author","story","MainPage","style","src","DogSkeleton","alt","height","width","Gold","App","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,0MCuD3C,IAAMC,EAAO,CACXC,WAAY,gBAGRC,EAAO,CACXC,OAAQ,OACRC,UAAW,SACXC,SAAU,OACVC,WAAY,QAGRC,EAAQ,CACZH,UAAW,SACXC,SAAU,QAGNG,EAAS,CACbJ,UAAW,SACXC,SAAU,QAGNI,EAAQ,CACZN,OAAQ,OACRC,UAAW,SACXC,SAAU,QAEGK,EA7Ef,WACE,OACE,yBAAKC,MAAOX,GACV,wBAAIW,MAAOT,GAAX,uCACA,uBAAGS,MAAOJ,GAAV,gBACA,yBAAKK,IAAKC,IAAaC,IAAI,eAAeC,OAAO,MAAMC,MAAM,QAC7D,uBAAGL,MAAOH,GAAV,cAEA,uBAAGG,MAAOF,GAAV,spBAYA,uBAAGE,MAAOF,GAAV,oGAIA,6BACA,yBAAKE,MAAOX,GACV,wBAAIW,MAAOT,GAAX,yCACA,uBAAGS,MAAOJ,GAAV,eACA,yBAAKK,IAAKK,IAAMH,IAAI,cAAcC,OAAO,MAAMC,MAAM,QACrD,uBAAGL,MAAOH,GAAV,cACA,uBAAGG,MAAOF,GAAV,i1BAeA,gCC/BR,I,cCIeS,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OAEb,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAHJ,UCGcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ce61a9bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/DogSkeleton.92c92aa4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Gold.78856105.png\";","import React from \"react\";\nimport DogSkeleton from \"../images/DogSkeleton.jpg\";\nimport Gold from \"../images/Gold.png\";\n\nfunction MainPage() {\n  return (\n    <div style={font}>\n      <h1 style={date}> Watson's first story- June 7, 2020</h1>\n      <p style={title}>The Dead Dog</p>\n      <img src={DogSkeleton} alt=\"Dog Skeleton\" height=\"200\" width=\"200\" />\n      <p style={author}>By: Watson</p>\n\n      <p style={story}>\n        Once there was a dog named Rocket. One day he went to see his friend\n        Jack. They talked about an old city full of dogs. They decided to go to\n        the city. When they got there they went to the market to get lunch. Then\n        they went to the museum. They both thought a dog skeleton moved and it\n        did. They spent the night in a panic, the skeleton dog was chasing\n        everyone. Rocket and Jack, 5 years later, Rocket an Jack go back to the\n        city and fight the skeleton dog. It took them 4 days to get him tired\n        enough to drag him to dog jail. Dogs started to move back to the city,\n        some dogs found a passage under the skeleton dog's case. Rocket and Jack\n        go down the passage.\n      </p>\n      <p style={story}>\n        Rocket and Jack find guards. Skeleton guards. Will they win the fight?\n        What's behind the guards?\n      </p>\n      <hr />\n      <div style={font}>\n        <h1 style={date}>Watson's second story - June 14, 2020</h1>\n        <p style={title}>The passage</p>\n        <img src={Gold} alt=\"gold bricks\" height=\"200\" width=\"200\" />\n        <p style={author}>By: Watson</p>\n        <p style={story}>\n          In our last story Rocket and Jack find guards, Jack says he wants to\n          go back. Then Rocket convinces him to fight the guards. After 10 min\n          they were dead. Well that was easy, said Jack. They soon found that\n          they were in a maze with traps, the first trap they set made it so\n          they could not get out of the maze. 3 hours in the maze is when they\n          found an exit, but they also found a monster so they threw a ball to\n          distract the monster so they could get by. Once they were past the\n          monster they found themselves in the treasure room. They got some gold\n          and went through a door they found under the gold there was 1 guard in\n          their way and they took care of him and eventually they found a\n          trapdoor and they pushed it open and were outside the museum and they\n          told everyone and some dogs boarded the passages. Rocket and Jack were\n          happy and went home.\n        </p>\n        <hr />\n      </div>\n    </div>\n  );\n}\n\nconst font = {\n  fontFamily: \"Patrick Hand\",\n};\n\nconst date = {\n  margin: \"20px\",\n  textAlign: \"center\",\n  fontSize: \"20px\",\n  fontWeight: \"bold\",\n};\n\nconst title = {\n  textAlign: \"center\",\n  fontSize: \"20px\",\n};\n\nconst author = {\n  textAlign: \"center\",\n  fontSize: \"20px\",\n};\n\nconst story = {\n  margin: \"40px\",\n  textAlign: \"center\",\n  fontSize: \"20px\",\n};\nexport default MainPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <header style={headerStyle}>\n      <h1 style={h1Style}>Stories written by Watson</h1>\n      {/* <Link style={linkStyle} to=\"/\">\n        Home\n      </Link>{\" \"}\n      |\n      <Link style={linkStyle} to=\"/about\">\n        About\n      </Link>{\" \"} */}\n    </header>\n  );\n}\n\nconst h1Style = {\n  fontFamily: \"Patrick Hand\",\n  fontSize: \"50px\",\n};\nconst headerStyle = {\n  background: \"#458eed\",\n  color: \"#fff\",\n  textAlign: \"center\",\n  padding: \"10px\",\n};\n\nconst linkStyle = {\n  color: \"#fff\",\n  textDecoration: \"none\",\n  fontFamily: \"Patrick Hand\",\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./components/MainPage\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        {/* <Route exact path=\"/about\">\n          {/* <About /> */}\n        {/* </Route> */} */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}